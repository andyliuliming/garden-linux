// This file was generated by counterfeiter
package fake_cgroup_reader

import (
	"sync"

	"code.cloudfoundry.org/garden-linux/linux_container/cgroups_manager"
)

type FakeCgroupReader struct {
	CgroupNodeStub        func(subsytem string) (string, error)
	cgroupNodeMutex       sync.RWMutex
	cgroupNodeArgsForCall []struct {
		subsytem string
	}
	cgroupNodeReturns struct {
		result1 string
		result2 error
	}
}

func (fake *FakeCgroupReader) CgroupNode(subsytem string) (string, error) {
	fake.cgroupNodeMutex.Lock()
	fake.cgroupNodeArgsForCall = append(fake.cgroupNodeArgsForCall, struct {
		subsytem string
	}{subsytem})
	fake.cgroupNodeMutex.Unlock()
	if fake.CgroupNodeStub != nil {
		return fake.CgroupNodeStub(subsytem)
	} else {
		return fake.cgroupNodeReturns.result1, fake.cgroupNodeReturns.result2
	}
}

func (fake *FakeCgroupReader) CgroupNodeCallCount() int {
	fake.cgroupNodeMutex.RLock()
	defer fake.cgroupNodeMutex.RUnlock()
	return len(fake.cgroupNodeArgsForCall)
}

func (fake *FakeCgroupReader) CgroupNodeArgsForCall(i int) string {
	fake.cgroupNodeMutex.RLock()
	defer fake.cgroupNodeMutex.RUnlock()
	return fake.cgroupNodeArgsForCall[i].subsytem
}

func (fake *FakeCgroupReader) CgroupNodeReturns(result1 string, result2 error) {
	fake.CgroupNodeStub = nil
	fake.cgroupNodeReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

var _ cgroups_manager.CgroupReader = new(FakeCgroupReader)
