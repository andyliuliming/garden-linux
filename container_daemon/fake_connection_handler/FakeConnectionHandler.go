// This file was generated by counterfeiter
package fake_connection_handler

import (
	"encoding/json"
	"sync"

	"code.cloudfoundry.org/garden-linux/container_daemon"
)

type FakeConnectionHandler struct {
	HandleStub        func(decoder *json.Decoder) (*container_daemon.ResponseMessage, error)
	handleMutex       sync.RWMutex
	handleArgsForCall []struct {
		decoder *json.Decoder
	}
	handleReturns struct {
		result1 *container_daemon.ResponseMessage
		result2 error
	}
}

func (fake *FakeConnectionHandler) Handle(decoder *json.Decoder) (*container_daemon.ResponseMessage, error) {
	fake.handleMutex.Lock()
	fake.handleArgsForCall = append(fake.handleArgsForCall, struct {
		decoder *json.Decoder
	}{decoder})
	fake.handleMutex.Unlock()
	if fake.HandleStub != nil {
		return fake.HandleStub(decoder)
	} else {
		return fake.handleReturns.result1, fake.handleReturns.result2
	}
}

func (fake *FakeConnectionHandler) HandleCallCount() int {
	fake.handleMutex.RLock()
	defer fake.handleMutex.RUnlock()
	return len(fake.handleArgsForCall)
}

func (fake *FakeConnectionHandler) HandleArgsForCall(i int) *json.Decoder {
	fake.handleMutex.RLock()
	defer fake.handleMutex.RUnlock()
	return fake.handleArgsForCall[i].decoder
}

func (fake *FakeConnectionHandler) HandleReturns(result1 *container_daemon.ResponseMessage, result2 error) {
	fake.HandleStub = nil
	fake.handleReturns = struct {
		result1 *container_daemon.ResponseMessage
		result2 error
	}{result1, result2}
}

var _ container_daemon.ConnectionHandler = new(FakeConnectionHandler)
