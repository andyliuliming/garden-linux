// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"code.cloudfoundry.org/garden-linux/network"
)

type FakeConfigurer struct {
	ConfigureContainerStub        func(*network.ContainerConfig) error
	configureContainerMutex       sync.RWMutex
	configureContainerArgsForCall []struct {
		arg1 *network.ContainerConfig
	}
	configureContainerReturns struct {
		result1 error
	}
	ConfigureHostStub        func(*network.HostConfig) error
	configureHostMutex       sync.RWMutex
	configureHostArgsForCall []struct {
		arg1 *network.HostConfig
	}
	configureHostReturns struct {
		result1 error
	}
}

func (fake *FakeConfigurer) ConfigureContainer(arg1 *network.ContainerConfig) error {
	fake.configureContainerMutex.Lock()
	fake.configureContainerArgsForCall = append(fake.configureContainerArgsForCall, struct {
		arg1 *network.ContainerConfig
	}{arg1})
	fake.configureContainerMutex.Unlock()
	if fake.ConfigureContainerStub != nil {
		return fake.ConfigureContainerStub(arg1)
	} else {
		return fake.configureContainerReturns.result1
	}
}

func (fake *FakeConfigurer) ConfigureContainerCallCount() int {
	fake.configureContainerMutex.RLock()
	defer fake.configureContainerMutex.RUnlock()
	return len(fake.configureContainerArgsForCall)
}

func (fake *FakeConfigurer) ConfigureContainerArgsForCall(i int) *network.ContainerConfig {
	fake.configureContainerMutex.RLock()
	defer fake.configureContainerMutex.RUnlock()
	return fake.configureContainerArgsForCall[i].arg1
}

func (fake *FakeConfigurer) ConfigureContainerReturns(result1 error) {
	fake.ConfigureContainerStub = nil
	fake.configureContainerReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeConfigurer) ConfigureHost(arg1 *network.HostConfig) error {
	fake.configureHostMutex.Lock()
	fake.configureHostArgsForCall = append(fake.configureHostArgsForCall, struct {
		arg1 *network.HostConfig
	}{arg1})
	fake.configureHostMutex.Unlock()
	if fake.ConfigureHostStub != nil {
		return fake.ConfigureHostStub(arg1)
	} else {
		return fake.configureHostReturns.result1
	}
}

func (fake *FakeConfigurer) ConfigureHostCallCount() int {
	fake.configureHostMutex.RLock()
	defer fake.configureHostMutex.RUnlock()
	return len(fake.configureHostArgsForCall)
}

func (fake *FakeConfigurer) ConfigureHostArgsForCall(i int) *network.HostConfig {
	fake.configureHostMutex.RLock()
	defer fake.configureHostMutex.RUnlock()
	return fake.configureHostArgsForCall[i].arg1
}

func (fake *FakeConfigurer) ConfigureHostReturns(result1 error) {
	fake.ConfigureHostStub = nil
	fake.configureHostReturns = struct {
		result1 error
	}{result1}
}

var _ network.Configurer = new(FakeConfigurer)
